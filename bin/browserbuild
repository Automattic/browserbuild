#!/usr/bin/env node

var program = require('commander')
  , path = require('path')
  , fs = require('fs')
  , pwd = process.cwd()

// source for client-side require

var source = fs.readFileSync(__dirname + '/../lib/require.js', 'utf8')
    .replace(/\/*([^/]+)\/\n/g, '')
    .replace(/\n/g, '')
    .replace(/ +/g, ' ')

// program

program
  .version(require('../package').version)
  .usage('[options] <file â€¦>')
  .option('-g, --global [name]', 'Name of the global to export.')
  .option('-b, --basepath [name]', 'Base path of supplied files ['+ pwd + '].', pwd)
  .option('-m, --main <name>', 'Name of the main file/module to export.')
  .option('-d, --debug', 'Includes visionmedia/debug for a dev build.')
  .parse(process.argv)

// validate

if (!program.main) {
  console.error('\n  Please supply `main` option\n');
  program.emit('help');
  return;
}

if (!process.args.length) {
  console.error('\n  Please supply files.\n');
  program.emit('help');
  return;
}

// process argument

var target = program.args
  , mod = path.basename(program.main)

function handle (path) {
  var stat = fs.statSync(path);

  if (stat.isDirectory()) {
    var files = fs.readdirSync(path);

    files.forEach(function (f) {
      handle(path + '/' + f);
    });
  } else {
    var base = program.basepath
      , source = fs.readFileSync(path, 'utf8')

    if (base && base == path.substr(0, base.length)) {
      path = path.substr(base.length);
    }

    data += 'require.register("' + path + '", '
      + 'function(module, exports, require, global){\n' + source + '\n});';
  }
};

// head
var data = '(function(){'
  + 'var global = this;'
  + 'var debug = ' + debug + ';'
  + source

// handle files
process.args.forEach(handle);

// tail
data += program.global + ' = require(\'' + mod + '\');\n';
data += '})();';

console.log(data);
